version: "3.12"

volumes:
  pg_data:


services:
  producer:
    build:
      context: ./producer_service
    depends_on:
      - kafka
      - postgres
    ports:
      - "0.0.0.0:8000:8000"

  consumer:
    build:
      context: ./consumer_service
    depends_on:
      - kafka
      - postgres
    command: >
      sh -c "poetry run python manage.py migrate && poetry run python manage.py consumer"
    env_file: .env
    restart: on-failure

  postgres:
    image: postgres:13
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 2s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    env_file: .env
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 7s
      timeout: 7s
      retries: 5
